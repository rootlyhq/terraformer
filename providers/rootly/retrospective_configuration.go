
// Generated by generators/rootly/rootly.js
 
package rootly

import (
	
	"github.com/GoogleCloudPlatform/terraformer/terraformutils"
	"github.com/rootlyhq/terraform-provider-rootly/client"
	rootlygo "github.com/rootlyhq/terraform-provider-rootly/schema"
)

type RetrospectiveConfigurationGenerator struct {
	RootlyService
}

func (g* RetrospectiveConfigurationGenerator) InitResources() error {
	page_size := 50
	page_num := 1

	client, err := g.RootlyClient()
	if err != nil {
		return err
	}

	for {
		resources, err := func(page_size, page_num int) ([]interface{}, error) {
			params := new(rootlygo.ListRetrospectiveConfigurationsParams)
			params.PageSize = &page_size
			params.PageNumber = &page_num
			return client.ListRetrospectiveConfigurations(params)
		}(page_size, page_num)

		if err != nil {
			return err
		}

		if len(resources) == 0 {
			break
		}

  	for _, resource := range resources {
      tf_resource := g.createRetrospectiveConfigurationResource(resource)
      g.Resources = append(g.Resources, tf_resource)
      
  	}

		page_num += 1
	}

	return nil
}

func (g *RetrospectiveConfigurationGenerator) createRetrospectiveConfigurationResource(provider_resource interface{}) terraformutils.Resource {
	x, _ := provider_resource.(*client.RetrospectiveConfiguration)
	return terraformutils.NewSimpleResource(
		x.ID,
		x.ID,
		"rootly_retrospective_configuration",
		g.ProviderName,
		[]string{},
	)
}




